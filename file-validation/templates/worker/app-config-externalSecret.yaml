apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "{{ .Values.name }}-worker-app-config"
spec:
  secretStoreRef:
    name: aws-parameter-store-secretstore
    kind: ClusterSecretStore
  target:
    name: "{{ .Values.name }}-worker-app-config"
    template:
      engineVersion: v2
      data:
        app-config.yaml: |
          app:
            name: "{{ .Values.name }}-worker"
            runner_type: worker
          audience: "{{`{{ .audienceAuth0 }}`}}"
          audience_system: "{{`{{ .audienceSystemAuth0 }}`}}"
          log_level: "{{ .Values.worker.logLevel }}"
          auth0:
            domain: "{{`{{ .domainAuth0 }}`}}"
            client_id:  "{{`{{ .auth0ClientId }}`}}"
            client_secret: "{{`{{ .auth0ClientSecret }}`}}"
          jaeger:
            endpoint: "http://jaegertracing-collector.jaegertracing:4318/v1/traces"
          sqs:
            url: "{{`{{ .sqsURL }}`}}"
            msg_count: 5
            visibility_timeout: 60
          data_store_sns:
            arn: "{{`{{ .dataStoreSNSArn }}`}}"
  data:
    - secretKey: audienceAuth0
      remoteRef:
        key: "{{ .Values.worker.externalSecret.appConfig.audienceAuth0 }}"
    - secretKey: domainAuth0
      remoteRef:
        key: "{{ .Values.worker.externalSecret.appConfig.domainAuth0 }}"
    - secretKey: audienceSystemAuth0
      remoteRef:
        key: "{{ .Values.worker.externalSecret.appConfig.audienceSystemAuth0 }}"
    - secretKey: auth0ClientId
      remoteRef:
        key: "{{ .Values.worker.externalSecret.appConfig.auth0Cred }}"
        property: clientId
      sourceRef:
        storeRef:
          name: aws-secret-manager-secretstore
          kind: ClusterSecretStore
    - secretKey: auth0ClientSecret
      remoteRef:
        key: "{{ .Values.worker.externalSecret.appConfig.auth0Cred }}"
        property: clientSecret
      sourceRef:
        storeRef:
          name: aws-secret-manager-secretstore
          kind: ClusterSecretStore
    - secretKey: sqsURL
      remoteRef:
        key: "{{ .Values.worker.externalSecret.appConfig.sqsQueueURL }}"
    - secretKey: dataStoreSNSArn
      remoteRef:
        key: "{{ .Values.worker.externalSecret.appConfig.dataStoreSNSArn }}"
