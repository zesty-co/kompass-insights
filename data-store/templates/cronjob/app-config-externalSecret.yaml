apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "{{ .Values.name }}-cronjob-app-config"
spec:
  secretStoreRef:
    name: aws-parameter-store-secretstore
    kind: ClusterSecretStore
  target:
    name: "{{ .Values.name }}-cronjob-app-config"
    template:
      engineVersion: v2
      data:
        app-config.yaml: |
          app:
            name: "{{ .Values.name }}-cronjob"
            runner_type: cronjob
          audience: "{{`{{ .audienceAuth0 }}`}}"
          audience_system: "{{`{{ .audienceSystemAuth0 }}`}}"
          log_level: "{{ .Values.cronjob.logLevel }}"
          auth0:
            domain: "{{`{{ .domainAuth0 }}`}}"
            client_id:  "{{`{{ .auth0CleintId }}`}}"
            client_secret: "{{`{{ .auth0CleintSecret }}`}}"
          jaeger:
            endpoint: "http://jaegertracing-collector.jaegertracing:4318/v1/traces"
          db:
            write:
              username: "{{`{{ .databaseUsername }}`}}"
              password: "{{`{{ .databasePassword }}`}}"
              db_name: "{{`{{ .databaseName }}`}}"
              hosts:
              {{`{{- range $value := .databaseHosts | fromJson }}`}}
              - {{`{{ $value | quote }}`}}
              {{`{{- end }}`}}
              ssl_mode: require
            read:
              username: "{{`{{ .databaseUsername }}`}}"
              password: "{{`{{ .databasePassword }}`}}"
              db_name: "{{`{{ .databaseName }}`}}"
              hosts:
              {{`{{- range $value := .databaseHosts | fromJson }}`}}
              - {{`{{ $value | quote }}`}}
              {{`{{- end }}`}}
              ssl_mode: require

  data:
    - secretKey: audienceAuth0
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.audienceAuth0 }}"
    - secretKey: domainAuth0
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.domainAuth0 }}"
    - secretKey: audienceSystemAuth0
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.audienceSystemAuth0 }}"
    - secretKey: auth0CleintId
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.auth0Cred }}"
        property: clientId
      sourceRef:
        storeRef:
          name: aws-secret-manager-secretstore
          kind: ClusterSecretStore
    - secretKey: auth0CleintSecret
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.auth0Cred }}"
        property: clientSecret
      sourceRef:
        storeRef:
          name: aws-secret-manager-secretstore
          kind: ClusterSecretStore
    - secretKey: databaseUsername
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.databaseCredentials }}"
        property: username
      sourceRef:
        storeRef:
          name: aws-secret-manager-secretstore
          kind: ClusterSecretStore
    - secretKey: databasePassword
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.databaseCredentials }}"
        property: password
      sourceRef:
        storeRef:
          name: aws-secret-manager-secretstore
          kind: ClusterSecretStore
    - secretKey: databaseName
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.databaseDetails }}"
        property: database
      sourceRef:
        storeRef:
          name: aws-secret-manager-secretstore
          kind: ClusterSecretStore
    - secretKey: databaseHosts
      remoteRef:
        key: "{{ .Values.cronjob.externalSecret.appConfig.databaseDetails }}"
        property: hosts
      sourceRef:
        storeRef:
          name: aws-secret-manager-secretstore
          kind: ClusterSecretStore