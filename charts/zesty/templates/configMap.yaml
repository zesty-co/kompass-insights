apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "zesty-k8s.configmap" . }}"
  labels:
    app.kubernetes.io/instance: "{{ include "zesty-k8s.fullname" . }}"
    app.kubernetes.io/name: "{{ include "zesty-k8s.fullname" . }}"
data:
  ORG_ID: "{{ .Values.orgID }}"
  PODMINUTEMETRICS_ENABLED: "{{ .Values.podMinuteMetrics.enabled }}"
  PATHS_MOUNTPATH: "{{ .Values.persistence.mountPath }}"
  STORAGE_SIZE: "{{ .Values.persistence.spec.resources.requests.storage }}"
  EXTERNAL_ID: "{{ .Values.externalID }}"
  {{- if .Values.prometheus.url }}
  PROMETHEUS_SERVER_ENDPOINT: "{{ .Values.prometheus.url }}"
  {{- end }}
  {{- if .Values.prometheus.username }}
  DB_BASIC_AUTH_USERNAME: "{{ .Values.prometheus.username }}"
  {{- end }}
  {{- if .Values.prometheus.password }}
  DB_BASIC_AUTH_PW: "{{ .Values.prometheus.password }}"
  {{- end }}
  {{- if .Values.prometheus.bearerToken }}
  DB_BEARER_TOKEN: "{{ .Values.prometheus.bearerToken }}"
  {{- end }}
  {{- if .Values.awsAthena.enabled }}
  ATHENA_ENABLED: "{{ .Values.awsAthena.enabled }}"
  ATHENA_CUR_V2: "{{ .Values.awsAthena.curV2 }}"
  ATHENA_PROJECT_ID: "{{ .Values.awsAthena.athenaProjectID }}"
  ATHENA_BUCKET_NAME: "{{ .Values.awsAthena.athenaBucketName }}"
  ATHENA_REGION: "{{ .Values.awsAthena.athenaRegion }}"
  ATHENA_DATABASE: "{{ .Values.awsAthena.athenaDatabase }}"
  ATHENA_TABLE: "{{ .Values.awsAthena.athenaTable }}"
  ATHENA_WORKGROUP: "{{ .Values.awsAthena.athenaWorkgroup }}"
  ATHENA_CATALOG: "{{ .Values.awsAthena.athenaCatalog }}"
  {{- end }}
  {{- if .Values.assumeRole.enabled }}
  MASTER_PAYER_ARN: "{{ .Values.assumeRole.masterRoleArn }}"
  MASTER_ROLE_EXTERNALID: "{{ .Values.assumeRole.masterExternalID }}"
  ZESTY_ROLE_EXTERNALID: "{{ .Values.assumeRole.zestyExternalID }}"
  ZESTY_ROLE_ARN: "{{ .Values.assumeRole.roleArn }}"
  {{- end }}
  {{- if .Values.s3override.enabled }}
  S3BUCKET: "{{ .Values.s3override.bucket }}"
  REGION: "{{ .Values.s3override.region }}"
  {{- end }}
  LOG_LEVEL: "{{ .Values.log.level }}"
  LOG_REMOTE: "{{ .Values.log.remote }}"
  {{- if .Values.metadata.enabled }}
  METADATA_ACCOUNTID: "{{ .Values.metadata.accountID }}"
  METADATA_REGION: "{{ .Values.metadata.region }}"
  METADATA_CLUSTERNAME: "{{ .Values.metadata.clusterName }}"
  {{- end }}
  {{- if .Values.admission.enabled }}
  GRPC_PORT: "{{ .Values.admission.grpc.server.port }}"
  MANAGER_HOST: "{{ .Values.admission.service.name }}"
  MANAGER_PORT: "{{ .Values.admission.grpc.port }}"
  {{- end }}
  {{- if .Values.awsCluster.enabled }}
  {{- if ne .Values.awsCluster.accessKeyID "" }}
  AWS_ACCESS_KEY_ID: "{{ .Values.awsCluster.accessKeyID }}"
  AWS_SECRET_ACCESS_KEY: "{{ .Values.awsCluster.secretAccessKey }}"
  {{- end }}
  {{- end }}
  SECRET_NAME: "{{ .Values.admission.insights.secret }}"
{{- if .Values.victoriaMetrics.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vmagent-config
  namespace: {{ .Release.Namespace }}
data:
  vmagent-config.yaml: |
    scrape_configs:
      # For container CPU and memory metrics
      - job_name: 'kubelet'
        scrape_interval: 30s
        scheme: https
        tls_config:
          insecure_skip_verify: true
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__meta_kubernetes_node_name]
            target_label: node
          - target_label: __metrics_path__
            replacement: /metrics/cadvisor
          - source_labels: [__meta_kubernetes_node_address_InternalIP]
            target_label: __address__
            replacement: ${1}:10250
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '.*'
            action: keep

      # for collecting Pilot metrics
      - job_name: 'pilot'
        scrape_interval: 30s
        static_configs:
          - targets: ['http://{{ include "recommendations-maker.name" . }}.{{ .Release.Namespace }}:{{ .Values.recommendationsMaker.port }}']

      # for collecting VM metrics
      - job_name: 'vmetrics'
        scrape_interval: 30s
        static_configs:
          - targets: ['http://victoriametrics.{{ .Release.Namespace }}:8428']

      # For pod and node metrics
      - job_name: 'kube-state-metrics'
        scrape_interval: 30s
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            regex: zesty-kompass-pod-rightsizing-kube-state-metrics
            action: keep
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '.*'
            action: keep
  {{- end }}