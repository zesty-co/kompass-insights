apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "zesty-k8s.fullname" . }}"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/instance: "{{ include "zesty-k8s.fullname" . }}"
    app.kubernetes.io/name: "{{ include "zesty-k8s.fullname" . }}"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: "{{ include "zesty-k8s.fullname" . }}"
      app.kubernetes.io/name: "{{ include "zesty-k8s.fullname" . }}"
  template:
    metadata:
      annotations:
        timestamp: {{ now | quote }}
        {{- with .Values.insights.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/instance: "{{ include "zesty-k8s.fullname" . }}"
        app.kubernetes.io/name: "{{ include "zesty-k8s.fullname" . }}"
        {{- with .Values.insights.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: true
      {{- if .Values.global.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.global.nodeSelector | nindent 10 }}
      {{- end }}
      {{- if .Values.global.tolerations }}
      tolerations:
      {{- toYaml .Values.global.tolerations | nindent 10 }}
      {{- end }}
      initContainers:
        - image: "{{ .Values.image.migrationRepository }}:{{ include "zesty-k8s.version" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: migrate
          volumeMounts:
            - mountPath: {{ .Values.persistence.mountPath }}
              name: {{ .Values.persistence.volumeName }}
          args: ["schema", "apply", "--url", "sqlite://{{ .Values.persistence.mountPath}}/zesty.db", "--dev-url", "sqlite://:memory:", "--to",  "file:///bin/pkg/db/schema.sql", "--auto-approve", "--format", "json"]
      containers:
        - image: "{{ .Values.image.repository }}:{{ include "zesty-k8s.version" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: "{{ include "zesty-k8s.name" . }}"
          ports:
            - name: healthz
              containerPort: {{ .Values.insights.health.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.insights.metrics.port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.insights.grpc.server.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.insights.health.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.insights.health.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          {{- with .Values.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
          {{- toYaml .Values.container.securityContext | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.persistence.mountPath }}
              name: {{ .Values.persistence.volumeName }}
          envFrom:
            - configMapRef:
                name: "{{ include "zesty-k8s.configmap" . }}"
          {{- if .Values.awsCluster.enabled }}
          {{- if eq .Values.awsCluster.accessKeyID "" }}
            - secretRef:
                name: {{ .Values.awsCluster.secret.name }}
          {{- end }}
          {{- end }}
          {{- if eq .Values.encryptedCredentials "" }}
            - secretRef:
                name: {{ .Values.secret.name | quote }}
          {{- end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CONTAINER_NAME
              value: {{ include "zesty-k8s.name" . }}
            {{- with .Values.insights.extraEnv }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.cxLogging.enabled }}
            - name: CX_API_KEY
              value: {{ .Values.cxLogging.apiKey }}
            - name: CX_CLUSTER_NAME
              value: {{ .Values.cxLogging.clusterName }}
            - name: CORALOGIX_DOMAIN
              value: {{ .Values.cxLogging.domain }}
            - name: CORALOGIX_INGRESS_LOGS_URL
              value: {{ .Values.cxLogging.ingressLogsUrl }}
            - name: CORALOGIX_INGRESS_URL
              value: {{ .Values.cxLogging.ingressUrl }}
            - name: CORALOGIX_LOG_URL
              value: {{ .Values.cxLogging.logUrl }}
            - name: CORALOGIX_TIME_DELTA_URL
              value: {{ .Values.cxLogging.timeDeltaUrl }}
            {{- end }}
            - name: KOMPASS_CHART_VERSION
              valueFrom:
                configMapKeyRef:
                  name: global-config
                  key: kompass_chart_version
          {{- if ne .Values.encryptedCredentials ""}}
            - name: ENCRYPTED_CREDENTIALS
              value: {{ .Values.encryptedCredentials | quote }}
          {{- end }}
      priorityClassName: system-cluster-critical
      securityContext:
      {{- toYaml .Values.securityContext | nindent 8 }}
      serviceAccountName: "{{ include "zesty-k8s.serviceAccountName" . }}"
      shareProcessNamespace: true
      volumes:
        - name: {{ .Values.persistence.volumeName }}
          persistentVolumeClaim:
            claimName: "{{ include "zesty-k8s.pvcname" . }}"
