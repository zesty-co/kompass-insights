orgID: ""
# if you put the value here, the secret won't be used.
encryptedCredentials: ""
secret:
  name: zesty-k8s-agent-creds
  key: "zesty-k8s/encrypted-creds"

awsCluster:
  enabled: true
  # if you put the values here, the secret won't be used.
  accessKeyID: ""
  secretAccessKey: ""
  secret:
    name: aws-cluster-secret
    key: "zesty/access-credentials"

log:
  level: 0
  remote: true

image:
  repository: "672188301118.dkr.ecr.eu-west-1.amazonaws.com/zesty-k8s/agent"
  migrationRepository: "672188301118.dkr.ecr.eu-west-1.amazonaws.com/zesty-k8s/agent/migration"
  pullPolicy: Always
  tag: stable
nodeSelector: {}

tolerations: []

nameOverride: ~
fullnameOverride: ~

persistence:
  volumeName: "zesty-pv-storage"
  mountPath: "/bin/db"
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi

serviceAccount:
  annotations:

externalID: ~

container:
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true

securityContext:
  fsGroup: 65532
  runAsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532
  seccompProfile:
    type: RuntimeDefault

resources:
  limits:
    memory: 2Gi
  requests:
    cpu: 250m
    memory: 2Gi

prometheus:
  url: ~
  username: ~
  password: ~
  bearerToken: ~

awsAthena:
  enabled: false
  curV2: false
  athenaProjectID: ~
  athenaBucketName: ~
  athenaRegion: ~
  athenaDatabase: ~
  athenaTable: ~
  athenaWorkgroup: ~
  athenaCatalog: ~

assumeRole:
  enabled: false
  masterRoleArn: ~
  masterExternalID: ~
  zestyExternalID: ~
  roleArn: ~

s3override:
  enabled: false
  bucket: ~
  region: ~

metadata:
  enabled: false
  accountID: ~
  region: ~
  clusterName: ~

health:
  port: 9000

config:
  manager:
    enable: false

podMinuteMetrics:
  enabled: true

metricsServer:
  enabled: false # enable it to install metrics-server

autoUpdate:
  enabled: true # enable it to allow auto update for the agent
  schedule: "0 0 * * 2,4" # At 00:00 on Tuesday and Thursday

admission:
  enabled: false
  insights:
    secret: "kompass-insights-secret"
    service: "kompass-insights-svc"
  grpc:
    server:
      port: 50052
    endpoint: "kompass-insights-svc"
    port: 50051
